name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configurar Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run tests
        id: run-tests
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
        continue-on-error: true

      - name: Comment Test Coverage
        uses: AthleticNet/comment-test-coverage@1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: coverage/coverage-summary.json
          title: Karma Test Coverage

#      - name: Upload coverage to Codecov
#        if: success()
#        uses: codecov/codecov-action@v3
#        with:
#          fail_ci_if_error: false
#          files: ./coverage/final-project-web/lcov.info

#  deploy-staging:
#    needs: build-and-test
#    if: github.ref == 'refs/heads/develop'
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout cÃ³digo
#        uses: actions/checkout@v4
#
#      - name: Deploy a Staging
#        run: |
#          echo "ðŸš€ Desplegando a ambiente de Staging..."
#          # AquÃ­ puedes agregar tus comandos de deploy a staging
#          # Por ejemplo: npm run deploy:staging
#
#      - name: Notificar deploy de Staging
#        run: echo "âœ… Deploy a Staging completado"
#
#  deploy-production:
#    needs: build-and-test
#    if: github.ref == 'refs/heads/main'
#    runs-on: ubuntu-latest

#    steps:
#      - name: Checkout cÃ³digo
#        uses: actions/checkout@v4
#
#      - name: Deploy a Production
#        run: |
#          echo "ðŸš€ Desplegando a ambiente de ProducciÃ³n..."
#          # AquÃ­ puedes agregar tus comandos de deploy a producciÃ³n
#          # Por ejemplo: npm run deploy:prod
#
#      - name: Notificar deploy de Production
#        run: echo "âœ… Deploy a Production completado"
#
#      - name: Crear Release Tag
#        if: success()
#        uses: actions/github-script@v7
#        with:
#          script: |
#            const date = new Date().toISOString().split('T')[0];
#            const tagName = `release-${date}-${context.runNumber}`;
#
#            github.rest.git.createRef({
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              ref: `refs/tags/${tagName}`,
#              sha: context.sha
#            });
